name: "🚀 RDP Win11 Deployment with Tailscale + 120 Cores"

on:
  workflow_dispatch:
    inputs:
      INSTANCE:
        description: "Instance number to deploy (e.g., 1, 2, 3...)"
        required: true
        default: "1"

jobs:
  secure-rdp:
    runs-on: windows-11-arm # Use the same runner type as in YML 1

    # If you have a self-hosted runner, use 'runs-on' to specify your custom runner instead
    # runs-on: [self-hosted, windows, x64] # Uncomment if using self-hosted runner

    env:
      INSTANCE_ID: ${{ github.event.inputs.INSTANCE }}
      TAILSCALE_AUTH_KEY: ${{ secrets.TAILSCALE_AUTH_KEY }}
      REPO: ${{ github.repository }}
      WORKFLOW_FILE: "enigmano-Win-11-120-Cores.yml"
      DEPLOYMENT_ID: ${{ github.run_id }}
      # Include other variables here that might be relevant from YML 1 (e.g., secret variables)

    steps:
      - name: 📌 Deployment Parameters
        shell: pwsh
        run: |
          $prevInstance = [int]$env:INSTANCE_ID - 1
          Write-Host "==============================================="
          Write-Host "🔹 RDP Instance             : $env:INSTANCE_ID"
          Write-Host "🔢 Previous Instance        : $prevInstance"
          Write-Host "📦 GitHub Repository        : $env:REPO"
          Write-Host "🔁 Deployment Workflow      : $env:WORKFLOW_FILE"
          Write-Host "🆔 Deployment ID            : $env:DEPLOYMENT_ID"
          Write-Host "==============================================="

      - name: 📥 Download EnigMano-instance.ps1
        shell: pwsh
        run: |
          $url = "https://gitlab.com/Shahzaib-YT/enigmano-windows-11-with-sound/-/raw/main/EnigMano-Instance.ps1"
          Write-Host "🌐 Downloading EnigMano-Instance.ps1..."
          Invoke-WebRequest -Uri $url -OutFile "EnigMano-Instance.ps1" -UseBasicParsing
          if (!(Test-Path "./EnigMano-Instance.ps1")) {
            Write-Error "❌ Failed to download EnigMano-Instance.ps1"
            exit 1
          }
          Write-Host "✅ EnigMano-Instance.ps1 downloaded successfully"

      - name: ⚔️ Execute EnigMano Instance Script
        shell: pwsh
        run: |
          Write-Host "🚦 Initiating EnigMano-Instance.ps1"
          powershell.exe -ExecutionPolicy Bypass -File ".\EnigMano-Instance.ps1"

      - name: 🚀 Install Tailscale
        run: |
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi"
          $installerPath = "$env:TEMP\tailscale.msi"
          
          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath
          Start-Process msiexec.exe -ArgumentList "/i", "`"$installerPath`"", "/quiet", "/norestart" -Wait
          Remove-Item $installerPath -Force
          Write-Host "✅ Tailscale installed successfully"

      - name: 🛠️ Establish Tailscale Connection
        run: |
          Write-Host "🔑 Establishing Tailscale connection..."
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-runner-$env:GITHUB_RUN_ID
          
          # Wait for Tailscale to assign an IP
          $tsIP = $null
          $retries = 0
          while (-not $tsIP -and $retries -lt 10) {
              $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
              Start-Sleep -Seconds 5
              $retries++
          }
          
          if (-not $tsIP) {
              Write-Error "Tailscale IP not assigned. Exiting."
              exit 1
          }
          Write-Host "✅ Tailscale IP assigned: $tsIP"
          echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV

      - name: 💠 Final Status
        if: always()
        shell: pwsh
        run: |
          Write-Host "✅ RDP Instance $env:INSTANCE_ID completed execution."
          Write-Host "🔋 Powered by: SHAHZAIB-YT"
          Write-Host "🏁 RDP deployment executed with tactical precision."
          Write-Host "📡 Tailscale IP for RDP: $env:TAILSCALE_IP"
